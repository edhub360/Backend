#steps:
#  - name: gcr.io/cloud-builders/docker
#    args: ['build', '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}', './Notes']

#  - name: gcr.io/cloud-builders/docker
#    args: ['push', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}']

# Images to be built and pushed by this build
#images:
#  - us-central1-docker.pkg.dev/arctic-sentry-467317-s7/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}

# Options for the entire build. This is a top-level key.
#options:
  # logging: CLOUD_LOGGING_ONLY # This is commented out.
  #defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

  #    - '--region'
  #    - us-central1
  #    - '--platform'
  #    - managed
  #    - '--allow-unauthenticated'
  #    - '--memor-1Gi'
  #    - '--cpu=1'
  #    - port=8080


steps:
  # 1. Build and push Notes backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}', 
      './Notes'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}'
    ]

  # 2. Build and push Login backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/login-repo/login-service:${SHORT_SHA}-${BUILD_ID}', 
      './login'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/login-repo/login-service:${SHORT_SHA}-${BUILD_ID}'
    ]

  # 3. Build and push Quiz backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/quiz-repo/quiz-service:${SHORT_SHA}-${BUILD_ID}', 
      './quiz'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/quiz-repo/quiz-service:${SHORT_SHA}-${BUILD_ID}'
    ]

  # 4. Build and push Flashcard backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/flashcard-repo/flashcard-service:${SHORT_SHA}-${BUILD_ID}', 
      './flashcard'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/flashcard-repo/flashcard-service:${SHORT_SHA}-${BUILD_ID}'
    ]

      # 5. Build and push AI Chat backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/ai-chat-repo/ai-chat-service:${SHORT_SHA}-${BUILD_ID}',
      './ai_chat'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'us-central1-docker.pkg.dev/arctic-sentry-467317-s7/ai-chat-repo/ai-chat-service:${SHORT_SHA}-${BUILD_ID}'
    ]
# Options for the entire build. This is a top-level key.
options:
  # logging: CLOUD_LOGGING_ONLY # This is commented out.
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/notebook-repo/notebook-service:${SHORT_SHA}-${BUILD_ID}'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/login-repo/login-service:${SHORT_SHA}-${BUILD_ID}'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/quiz-repo/quiz-service:${SHORT_SHA}-${BUILD_ID}'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/flashcard-repo/flashcard-service:${SHORT_SHA}-${BUILD_ID}'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/ai-chat-repo/aichat-service:${SHORT_SHA}-${BUILD_ID}'
